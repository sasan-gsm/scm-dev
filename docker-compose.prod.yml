version: '3.8'

services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn --config gunicorn.conf.py scm.wsgi:application
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - gunicorn_logs:/var/log/gunicorn
    ports:
      - "8000:8000"
    env_file:
      - ./.envs/.env.production
    depends_on:
      - redis
      - postgres
    restart: always
    networks:
      - scm_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - scm_network
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A scm worker -l INFO
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.envs/.env.production
    depends_on:
      - redis
      - postgres
    networks:
      - scm_network
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A scm beat -l INFO
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.envs/.env.production
    depends_on:
      - redis
      - postgres
    networks:
      - scm_network
    restart: always

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env.production
    ports:
      - "5432:5432"
    networks:
      - scm_network
    restart: always

networks:
  scm_network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  gunicorn_logs:
  redis_data:
  postgres_data:
